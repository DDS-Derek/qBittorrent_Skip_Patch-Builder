name: Build qbittorrent

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - version.json

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v4

      - 
        name: Set Version
        id: set-version
        run: |
          qBittorrent_Version=$(jq -r '.qBittorrent_Version' version.json)
          echo "qBittorrent_Version=${qBittorrent_Version}"
          echo "qBittorrent_Version=${qBittorrent_Version}" >> $GITHUB_OUTPUT

      - 
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/qbittorrent_skip_patch
          tags: |
            type=raw,value=${{ steps.set-version.outputs.qBittorrent_Version }}
            type=raw,value=latest

      - 
        name: Download nevinee files
        run: |
          git clone -b master https://github.com/devome/dockerfiles.git files
          cp -r files/qbittorrent/root root
          cp -r files/qbittorrent/root2 root2
          ls -al
          ls -al root
          ls -al root2

      - 
        name: Set Up QEMU
        uses: docker/setup-qemu-action@v3

      - 
        name: Set Up Buildx
        uses: docker/setup-buildx-action@v3
        
      - 
        name: Login DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - 
        name: Build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: |
            linux/amd64
            linux/arm64/v8
            linux/arm/v7
          build-args: |
            REPO_VERSION=libtorrent-rasterbar
            REPO_NAME=ddsderek/qbittorrent_skip_patch
            QBITTORRENT_VERSION=${{ steps.set-version.outputs.qBittorrent_Version }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-iyuu:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v4

      - 
        name: Set Version
        id: set-version
        run: |
          qBittorrent_Version=$(jq -r '.qBittorrent_Version' version.json)
          echo "qBittorrent_Version=${qBittorrent_Version}"
          echo "qBittorrent_Version=${qBittorrent_Version}" >> $GITHUB_OUTPUT

      - 
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/qbittorrent_skip_patch
          tags: |
            type=raw,value=${{ steps.set-version.outputs.qBittorrent_Version }}-iyuu
            type=raw,value=latest-iyuu

      - 
        name: Download nevinee files
        run: |
          git clone -b master https://github.com/devome/dockerfiles.git files
          cp -r files/qbittorrent/root root
          cp -r files/qbittorrent/root2 root2
          ls -al
          ls -al root
          ls -al root2

      - 
        name: Set Up QEMU
        uses: docker/setup-qemu-action@v3

      - 
        name: Set Up Buildx
        uses: docker/setup-buildx-action@v3
        
      - 
        name: Login DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - 
        name: Build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: iyuu.Dockerfile
          platforms: |
            linux/amd64
            linux/arm64/v8
            linux/arm/v7
          build-args: |
            REPO_VERSION=${{ steps.set-version.outputs.qBittorrent_Version }}
            REPO_NAME=ddsderek/qbittorrent_skip_patch
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}